version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app_w
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./docker/entrypoint.sh:/var/www/entrypoint.sh   # âœ… Mount it directly
    entrypoint: ["/bin/bash", "/var/www/entrypoint.sh"]
    command: ["php-fpm"]
    networks:
      - laravel
    depends_on:
      - mysql
      - redis


  nginx:
    image: nginx:alpine
    container_name: nginx_server_w
    ports:
      - "20402:443"    # Laravel backend
      - "20403:443"    # Angular frontend
      - "20404:20404"  # phpMyAdmin on custom port
    volumes:
      - ./src:/var/www
      - ./angularjs:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/angular.conf:/etc/nginx/conf.d/angular.conf
      - ./nginx/phpmyadmin.conf:/etc/nginx/conf.d/phpmyadmin.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
      - phpmyadmin
    networks:
      - laravel

  frontend:
    image: nginx:alpine
    container_name: angular_frontend
    volumes:
      - ./angularjs:/usr/share/nginx/html
      - ./nginx/angular.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: mysql_db_w
    restart: always
    ports:
      - "3308:3306"  # Optional: expose for local debugging
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis_cache_w
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_w
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - laravel

networks:
  laravel:

volumes:
  mysql_data:
